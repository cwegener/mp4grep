
longterm: modify makefile so that it can select different binaries to link with for each platform, by copying them into binary folder
example: windows: windows_vosk_api.dll -> vosk_api.dll, mac: mac_vosk_api.so -> vosk_api.so, linux: linux_vosk_api.so -> vosk_api.so

parse arguments, take in arguments (getopt?)

vosk might be able to provide a warning when users search for words their vosk model
wont transcribe.

implement file cache system for transcriptions.

multithreading
    create worker threads that continually draw orders from a dynamically allocated pool.
    avoid the overhead of spinning up a new thread/process for literally each file being searched.

search files

print output
    config words before/after
    pretty print filenames, extensions, etc
    https://github.com/p-ranav/indicators

convert any file to proper format/sample rate (ffmpeg, https://www.ffmpeg.org/doxygen/2.3/group__lswr.html#details)
    libswresample: https://github.com/FFmpeg/FFmpeg/blob/master/doc/examples/resampling_audio.c
    libavformat: https://ffmpeg.org/doxygen/0.6/output-example_8c-source.html

ocr -> take screens from video and ocr them, use tesseract
    print ocr results in different color

bundle versions for release, make it easy

progress bars

coloring https://github.com/ikalnytskyi/termcolor or maybe even https://buckaroo.pm/blog/building-reactive-terminals

help screen + error messages

take in confidence values from vosk, search all alternatives within a certain confidence threshold
 or grey out low confidence words

 no color environment variable should disable all coloring

 handle interrupts properly
 handle improper inputs

make it so after a certain threshold filenames are printed next to results to make it easier to see which results are for which files
Otherwise just have filenames at top of list of results if under threshold.
